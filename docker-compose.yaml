version: '3.2'
services:
  events_db:
    image: postgres:13-alpine
    volumes:
      - events_db:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis_events:
    image: redis:alpine
    container_name: redis_events
    volumes:
      - redis_events:/redis_events/data
    restart: always

  events:
    build: ./.
    image: events_image
    container_name: events
    volumes:
      - static_volume:/events/static
      - media_volume:/events/media
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=events_db
      - REDIS_HOST=redis_events
    depends_on:
      - events_db
      - redis_events
    command: bash -c "python script.py && gunicorn -b :8000 events.wsgi:application"
    restart: on-failure

  events_ws:
    image: events_image
    container_name: events_ws
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=events_db
      - REDIS_HOST=redis_events
    depends_on:
      - events
    command: bash -c "daphne -b 0.0.0.0 -p 8001 events.asgi:application"
    restart: on-failure

  nginx:
    image: nginx:1.19.3
    ports:
      - '80:80'
    volumes:
      - static_volume:/events/static
      - media_volume:/events/media
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    restart: always
    depends_on:
      - events

volumes:
  events_db:
  redis_events:
  static_volume:
  media_volume:

